#!/usr/bin/env python3

import sys
import os


PATH = os.environ['HOME'] + "/.config/boobies"
USER = os.environ['USER']

# Server methods:
#  - get
#  - share
# Client methods
#  - buildnet
#  - buildnet-save

def help():
    print("Possible commands are:")
    print("\tget - to retrieve list of known nodes")
    print("\tsave - to suggest saving of my list")
    print("\tshare - to share your list with other nodes")
    print("\tbuildnet - recursive get, i.e. asking all new nodes")
    print("\tbuildnet-save - recursive get and sharing with all nodes we know")

    
def get(isls=True):
    with open(PATH) as f:
        users = f.read()
        usersl = [i for i in users.split('\n') if i.strip() != '']

    if isls:
        return usersl
    return users


def save():
    usersl = get()
        
    newusersl = []
    for line in sys.stdin:
        newusersl.append(line.strip())
        allusers = list(set(usersl + newusersl))
        
    with open(PATH, 'w') as f:
        f.write('\n'.join(allusers))
    

def buildnet():
    Q = set(get())
    
    examined = {USER}

    while Q:
        v = Q.pop()
        examined.add(v)
        nodes = set(os.popen(f"ssh {v}@localhost boobies get").read().split())
        Q.update(nodes.difference(examined))

    with open(PATH, 'w') as f:
        f.write('\n'.join(list(examined)))


def share():
    for u in get():
        os.popen(f"cat ~/.config/boobies | ssh {u}@localhost boobies save")
        
def buildnet_save():
    buildnet()
    share()
    

if len(sys.argv) == 1:
    help()
    exit(0)
  
command = sys.argv[1]


if command == "get":
    print(get(0))
    
elif command == "save":
    save()

elif command == "buildnet":
    buildnet()

elif command == "share":
    share()

elif command == "buildnet-save":
    buildnet_save()

else:
    help()
    
    
