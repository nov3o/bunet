#!/usr/bin/env python3

import sys
import os
import os.path
import argparse


PATH = os.environ['HOME'] + "/.config/boobies"
USER = os.environ['USER']

    
def get(isls=False):
    if not os.path.isfile(PATH):
        if isls:
            return []
        print()
        return
    
    with open(PATH) as f:
        users = f.read()
        usersl = [i for i in users.split('\n') if i.strip() != '']

    if isls:
        return usersl
    print(users)


def save():
    usersl = get(1)
        
    newusersl = []
    for line in sys.stdin:
        newusersl.append(line.strip())
        allusers = list(set(usersl + newusersl))
        
    with open(PATH, 'w') as f:
        f.write('\n'.join(allusers))
    

def buildnet():
    Q = set(get(1))
    
    examined = {USER}

    while Q:
        v = Q.pop()
        examined.add(v)
        nodes = set(os.popen(f"ssh {v}@localhost boobies get").read().split())
        Q.update(nodes.difference(examined))

    with open(PATH, 'w') as f:
        f.write('\n'.join(list(examined)))


def share():
    for u in get(1):
        os.popen(f"cat ~/.config/boobies | ssh {u}@localhost boobies save &")
        

def buildnet_share():
    buildnet()
    share()
    

parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers(title='command',
                                   description='Action to perform',
                                   help='Command description')

get_parser = subparsers.add_parser('get', help='Get node\'s hosts list')
get_parser.set_defaults(func=get)

save_parser = subparsers.add_parser('save', help='Add your entered hosts to node\'s list')
save_parser.set_defaults(func=save)

buildnet_parser = subparsers.add_parser('buildnet', help="Retrieve all hosts from network")
buildnet_parser.set_defaults(func=buildnet)

buildnet_share_parser = subparsers.add_parser(
    'buildnet-share', help="Retrieve all hosts from network and share this list with others"
)
buildnet_share_parser.set_defaults(func=buildnet_share)

share_parser = subparsers.add_parser('share', help="Share your existing hosts list with others")
share_parser.set_defaults(func=share)

args = parser.parse_args()
args.func()
